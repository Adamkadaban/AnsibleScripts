- name: Install Suricata on all systems
  hosts: windows_hosts:linux_hosts
  become: yes
  
  tasks:
    - name: Install Suricata on Windows 
      become: yes
      ansible.windows.win_shell: |
        Invoke-WebRequest -Uri 'https://npcap.com/dist/npcap-1.78.exe' -OutFile 'C:\Temp\npcap-1.78.exe' -UseBasicParsing
        Start-Process -FilePath 'C:\Temp\npcap-1.78.exe' -ArgumentList '/S' -Wait
        Invoke-WebRequest -Uri 'https://www.openinfosecfoundation.org/download/windows/Suricata-7.0.2-1-64bit.msi' -OutFile 'C:\Temp\Suricata-7.0.2-1.msi' -UseBasicParsing
        Start-Process -FilePath 'C:\Temp\Suricata-7.0.2-1.msi' -ArgumentList '/qn' -Wait
      args:
        executable: powershell.exe
      when: "'Windows' in ansible_system"

    - name: Get Suricata Configured and Running on Windows
      become: yes
      ansible.windows.win_shell:
        $config_path = 'C:\Program Files\Suricata\suricata.yaml'
        Invoke-WebRequest -Uri 'https://rules.emergingthreats.net/open/suricata/emerging-all.rules' -OutFile 'C:\Program Files\Suricata\rules\emerging-all.rules' -UseBasicParsing
        Invoke-WebRequest -Uri 'https://github.com/maxgriff/AnsibleScripts/windows-suricata.yaml' -OutFile $config_path -UseBasicParsing
        $network = Get-NetIPInterface | Where-Object { $_.ConnectionState -eq 'Connected' -and $_.InterfaceAlias -notlike '*Loopback*' -and $_.AddressFamily -eq 'IPv4' } | Sort-Object -Property InterfaceMetric
        $interface_id = $network[0].InterfaceIndex
        $ip_addr = (Get-NetIPAddress -InterfaceIndex $interface_id | Where-Object {$_.AddressFamily -eq 'IPv4'}).IPAddress
        $config = Get-Content -Path $config_path
        $new_config = $config -replace '<IP-ADDRESS>', $ip_addr
        $new_config | Set-Content -Path $config_path
        cd $config_path
        .\Suricata.exe -c suricata.yaml -i $ip_addr --service-installi\
        start-service Suricata
      args:
        executable: powershell.exe
      when: "'Windows' in ansible_system"        
